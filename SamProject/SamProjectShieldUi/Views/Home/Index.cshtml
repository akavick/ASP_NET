@using SamProjectShieldUi.Controllers

@{
    ViewData["Title"] = "Home Page";
}

@(Html.ShieldChart()
      .Name("chart")
      .Theme("light")
      .Export(false)
      .AxisX(axisX => axisX.AxisType(ShieldUI.AspNetCore.Mvc.Chart.AxisType.DateTime)
                           .Min(new DateTime(2018, 7, 1))
                           .Max(new DateTime(2018, 7, 10)))
      .AxisY(axisY => axisY.Max(2.0).Min(0.0).MinorTicksRepeat(0.25f).EndOffset(0))
      //.SecondaryHeader(header => header.Text("ставка"))
      //.PrimaryHeader(header => header.Text(""))

      .DataSeries(dataSeries =>
      {
          foreach (ChartData bars in ViewBag.ColumnsDataSource)
          {
              dataSeries.Bar()
                        .StackMode(ShieldUI.AspNetCore.Mvc.Chart.StackMode.Normal)
                        .DataStart((new DateTime(2018, 7, 1) - bars.StartDate).Milliseconds)
                        .DataStep(24 * 3600 * 1000) // one day
                        .Color(bars.Color)
                        .CollectionAlias(bars.Name)
                        .Data(bars.DataSource);
          }

          //foreach (ChartData area in ViewBag.AreaDataSource)
          //{
          //    dataSeries.StepArea()
          //              .Data(area.DataSource)

          //              //.Line(line => line.Style(ChartSeriesLineStyle.Step))
          //              //.Markers(m => m.Visible(false).Size(0))
          //              .Color(area.Color)
          //              .Name(area.Name)
          //              //.Opacity(0.5)
          //              //.Tooltip(t => t.Visible(false))
          //              //.VisibleInLegend(false)
          //              //.DynamicHeight(true)
          //              //.DynamicSlope(true)
          //              ;
          //}

          //foreach (ChartData line in ViewBag.LineDataSource)
          //{
          //    dataSeries.StepLine()
          //              .Data(line.DataSource)
          //              //.Style(ChartSeriesStyle.Step)
          //              //.Markers(m => m.Visible(false).Size(0))
          //              .Color(line.Color)
          //              .Name(line.Name)
          //              //.Tooltip(t => t.Visible(false))
          //              //.VisibleInLegend(false)
          //              //.DynamicHeight(true)
          //              //.DynamicSlope(true)
          //              ;
          //}

      })
 )