@using HowToBeatNPM_1.Controllers
@{
    ViewData["Title"] = "Home Page";
}

@*<ejs-calendar id="calendar"></ejs-calendar>*@
@*<ejs-datepicker id="datepicker"></ejs-datepicker>*@

<script>
    function actionFailure(args)
    {
        var span = document.createElement('span');
        this.element.parentNode.insertBefore(span, this.element);
        span.style.color = '#FF0000';
        span.innerHTML = 'Server exception: ' + args['exception'];
    }
</script>

<ejs-grid id="Grid133" dataSource=@ViewBag.datasource allowPaging="true">
    <e-grid-pagesettings pageSize="3"></e-grid-pagesettings>
</ejs-grid>

<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

<ejs-grid id="Grid"
          dataSource="ViewBag.datasource"
          allowPaging="true"
          allowReordering="true"
          allowResizing="true"
          allowSorting="true"
          showColumnMenu="true"
          allowGrouping="true"
          toolbar="@(new List<string> { "Add", "Edit" , "Delete" , "Update" , "Cancel" })"
          detailTemplate="#detailtemplate"
          actionFailure="actionFailure">
    <e-grid-editSettings allowAdding="true"
                         allowDeleting="true"
                         allowEditing="true"
                         mode="Normal"></e-grid-editSettings>
    <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
    <e-grid-columns>
        <e-grid-column field="OrderId"
                       headerText="Order ID"
                       textAlign="Center"
                       width="120"
                       isPrimaryKey="true"
                       validationRules="@(new {required = true})"></e-grid-column>
        <e-grid-column @*dataSource="ViewBag.Customers" *@
                       template="#templateCuId"
                       headerText="Custumers"
                       textAlign="Center"
                       width="150"
                       validationRules="@(new {required = true})"
                       editType="dropdownedit"></e-grid-column>
        <e-grid-column field="OrderDate"
                       headerText=" Order Date"
                       format="yMd"
                       width="130"
                       validationRules="@(new {required = true})"
                       editType="datepickeredit"></e-grid-column>
        <e-grid-column field="Freight"
                       headerText="Freight"
                       format="C2"
                       width="120"
                       validationRules="@(new {required = true})"
                       editType="numericedit"></e-grid-column>
        <e-grid-column field="ShippedDate"
                       headerText="Shipped Date"
                       format="yMd"
                       width="140"
                       validationRules="@(new {required = true})"
                       editType="datepickeredit"></e-grid-column>
        <e-grid-column field="ShipCountry"
                       headerText="Ship Country"
                       width="150"
                       validationRules="@(new {required = true})"
                       editType="dropdownedit"></e-grid-column>
    </e-grid-columns>
</ejs-grid>


@*https://ej2.syncfusion.com/16.1.24/aspnet/documentation/grid/how-to.html?syntax=tag
https://aspdotnetcore.syncfusion.com/Grid/ColumnTemplate#/material
https://help.syncfusion.com/aspnet-core/gettingstarted/getting-started-2-0
https://metanit.com/sharp/aspnet5/7.2.php
https://docs.microsoft.com/en-us/aspnet/core/client-side/using-gulp
https://codeburst.io/how-to-use-webpack-in-asp-net-core-projects-a-basic-react-template-sample-25a3681a5fc2
https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc*@

<script type="text/x-template" id="templateCuId">
    <div style="background-color:azure">
        ${Customers}
        @*${Customers.Aggregate(new StringBuilder(), (sb, c) => sb.Append(c.Id.ToString()+",")).ToString()}*@
    </div>
</script>


<script>
    function actionComplete(args)
    {
        if (args.requestType === 'reorder')
        {
            var dropdown = document.getElementById("column").ej2_instances[0],
                grid = document.getElementById("Grid").ej2_instances[0];
            var field = (dropdown.value),
                index = grid.getColumnIndexByField(field);

            document.getElementById("columnIndex").ej2_instances[0].value = index;
        }
    }

    function columnChange(args)
    {
        var grid = document.getElementById("Grid").ej2_instances[0];
        var field = this.value;
        var index = grid.getColumnIndexByField(field);
        document.getElementById("columnIndex").ej2_instances[0].value = index;
    }

    function indexChange(args)
    {
        var grid = document.getElementById("Grid").ej2_instances[0],
            dropdown = document.getElementById("column").ej2_instances[0];
        var field = (dropdown.value);
        var toColumnIndex = this.value;
        grid.reorderColumns(field, (grid.columns[toColumnIndex]).field);
    }
</script>


<style type="text/css" class="cssStyles">
    .detailtable td
    {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .photo
    {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>

<script type="text/x-template" id="detailtemplate">
    @*<table class="detailtable" style="width:100%">
        <colgroup>
            <col style="width:35%" />
            <col style="width:35%" />
            <col style="width:30%" />
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="4" style="text-align: center;">*@
    @*<img class="photo" src="/scripts/Images/Employees/${EmployeeID}.png" alt="${EmployeeID}" />*@
    @*<span style="font-weight: 600; font-size:70px">${Cust.LastName[0]}${Cust.FirstName[0]}</span>
                    </td>
                    <td>
                        <span style="font-weight: 500;">CustomerId: </span> ${Cust.Id}
                    </td>
                    <td>
                        <span style="font-weight: 500;">DateOfBirth: </span> ${Cust.DateOfBirth.toLocaleDateString()}
                    </td>
                </tr>
                <tr>
                    <td>
                        <span style="font-weight: 500;">LastName: </span> ${Cust.LastName}
                    </td>
                    <td>
                        <span style="font-weight: 500;">FirstName: </span> ${Cust.FirstName}
                    </td>
                </tr>
            </tbody>
        </table>*@



    <ejs-grid dataSource="Customers"
              allowReordering="true"
              allowResizing="true"
              allowSorting="true">
        @*<e-grid-columns>
                <e-grid-column field="Id"
                               headerText="ID"
                               width="120"></e-grid-column>
                <e-grid-column field="DateOfBirth"
                               headerText="DateOfBirth"
                               format="yMd"
                               width="120"></e-grid-column>
                <e-grid-column field="LastName"
                               headerText="LastName"
                               width="120"></e-grid-column>
                <e-grid-column field="FirstName"
                               headerText="FirstName"
                               width="120"></e-grid-column>
            </e-grid-columns>*@
    </ejs-grid>
</script>





<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />




<ejs-button id="generate" content="generate"></ejs-button>
<div id="popup"></div>
<div id="performanceTime"></div>

<ejs-grid id="VirtualGrid"
          height="600"
          dataBound="hide"
          enableColumnVirtualization="true"
          enableVirtualization="true"
          actionFailure="actionFailure">

    <e-grid-columns>
        <e-grid-column field="Field1"
                       headerText="PlayerName"
                       width="140"></e-grid-column>
        <e-grid-column field="Field2"
                       headerText="Year"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field3"
                       headerText="Stint"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field4"
                       headerText="TMID"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field5"
                       headerText="LGID"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field6"
                       headerText="GP"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field7"
                       headerText="GS"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field8"
                       headerText="Minutes"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field9"
                       headerText="Points"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field10"
                       headerText="oRebounds"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field11"
                       headerText="dRebounds"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field12"
                       headerText="Rebounds"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field13"
                       headerText="Assists"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field14"
                       headerText="Steals"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field15"
                       headerText="Blocks"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field16"
                       headerText="Turnovers"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field17"
                       headerText="PF"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field18"
                       headerText="fgAttempted"
                       textAlign="Right"
                       width="150"></e-grid-column>
        <e-grid-column field="Field19"
                       headerText="fgMade"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field20"
                       headerText="ftAttempted"
                       textAlign="Right"
                       width="150"></e-grid-column>
        <e-grid-column field="Field21"
                       headerText="ftMade"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field22"
                       headerText="ThreeAttempted"
                       textAlign="Right"
                       width="150"></e-grid-column>
        <e-grid-column field="Field23"
                       headerText="ThreeMade"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field24"
                       headerText="PostGP"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field25"
                       headerText="PostGS"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field26"
                       headerText="PostMinutes"
                       textAlign="Right"
                       width="120"></e-grid-column>
        <e-grid-column field="Field27"
                       headerText="PostPoints"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field28"
                       headerText="PostoRebounds"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field29"
                       headerText="PostdRebounds"
                       textAlign="Right"
                       width="130"></e-grid-column>
        <e-grid-column field="Field30"
                       headerText="PostRebounds"
                       textAlign="Right"
                       width="130"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    var virtualData = [], date1 = null, date2 = null, flag = true;
    var names = ['hardire', 'abramjo01', 'aubucch01', 'Hook', 'Rumpelstiltskin', 'Belle', 'Emma', 'Regina', 'Aurora', 'Elsa',
        'Anna', 'Snow White', 'Prince Charming', 'Cora', 'Zelena', 'August', 'Mulan', 'Graham', 'Discord', 'Will', 'Robin Hood',
        'Jiminy Cricket', 'Henry', 'Neal', 'Red', 'Aaran', 'Aaren', 'Aarez', 'Aarman', 'Aaron', 'Aaron-James', 'Aarron', 'Aaryan', 'Aaryn',
        'Aayan', 'Aazaan', 'Abaan', 'Abbas', 'Abdallah', 'Abdalroof', 'Abdihakim', 'Abdirahman', 'Abdisalam', 'Abdul', 'Abdul-Aziz',
        'Abdulbasir', 'Abdulkadir', 'Abdulkarem', 'Abdulkhader', 'Abdullah', 'Abdul-Majeed', 'Abdulmalik', 'Abdul-Rehman', 'Abdur',
        'Abdurraheem', 'Abdur-Rahman', 'Abdur-Rehmaan', 'Abel', 'Abhinav', 'Abhisumant', 'Abid', 'Abir', 'Abraham', 'Abu', 'Abubakar',
        'Ace', 'Adain', 'Adam', 'Adam-James', 'Addison', 'Addisson', 'Adegbola', 'Adegbolahan', 'Aden', 'Adenn', 'Adie', 'Adil', 'Aditya',
        'Adnan', 'Adrian', 'Adrien', 'Aedan', 'Aedin', 'Aedyn', 'Aeron', 'Afonso', 'Ahmad', 'Ahmed', 'Ahmed-Aziz', 'Ahoua', 'Ahtasham',
        'Aiadan', 'Aidan', 'Aiden', 'Aiden-Jack', 'Aiden-Vee'];


    document.getElementById("generate").addEventListener('click',
        () =>
        {
            var grid = document.getElementById("VirtualGrid").ej2_instances[0]
            if (!virtualData.length)
            {
                show();
                dataSource();
                date1 = new Date().getTime();
                grid.dataSource = virtualData;
            }
            else
            {
                flag = true;
                show();
                date1 = new Date().getTime();
                grid.refresh();
            }
        });

    function show()
    {
        document.getElementById('popup').style.display = 'inline-block';
    }

    function hide(args)
    {
        if (flag && date1)
        {
            var date2 = new Date().getTime();
            document.getElementById('performanceTime').innerHTML = 'Time Taken: ' + (date2 - date1) + 'ms';
            flag = false;
        }
        document.getElementById('popup').style.display = 'none';
    }

    function dataSource()
    {
        for (var i = 0; i < 100000; i++)
        {
            virtualData.push({
                'Field1': names[Math.floor(Math.random() * names.length)],
                'Field2': 1967 + (i % 10),
                'Field3': Math.floor(Math.random() * 200),
                'Field4': Math.floor(Math.random() * 100),
                'Field5': Math.floor(Math.random() * 2000),
                'Field6': Math.floor(Math.random() * 1000),
                'Field7': Math.floor(Math.random() * 100),
                'Field8': Math.floor(Math.random() * 10),
                'Field9': Math.floor(Math.random() * 10),
                'Field10': Math.floor(Math.random() * 100),
                'Field11': Math.floor(Math.random() * 100),
                'Field12': Math.floor(Math.random() * 1000),
                'Field13': Math.floor(Math.random() * 10),
                'Field14': Math.floor(Math.random() * 10),
                'Field15': Math.floor(Math.random() * 1000),
                'Field16': Math.floor(Math.random() * 200),
                'Field17': Math.floor(Math.random() * 300),
                'Field18': Math.floor(Math.random() * 400),
                'Field19': Math.floor(Math.random() * 500),
                'Field20': Math.floor(Math.random() * 700),
                'Field21': Math.floor(Math.random() * 800),
                'Field22': Math.floor(Math.random() * 1000),
                'Field23': Math.floor(Math.random() * 2000),
                'Field24': Math.floor(Math.random() * 150),
                'Field25': Math.floor(Math.random() * 1000),
                'Field26': Math.floor(Math.random() * 100),
                'Field27': Math.floor(Math.random() * 400),
                'Field28': Math.floor(Math.random() * 600),
                'Field29': Math.floor(Math.random() * 500),
                'Field30': Math.floor(Math.random() * 300),
            });
        }
    }

</script>






