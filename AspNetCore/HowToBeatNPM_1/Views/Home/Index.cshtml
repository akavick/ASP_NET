@using System.Collections.ObjectModel
@using System.Text
@using HowToBeatNPM_1.Classes
@using Syncfusion.EJ2
@{
    ViewData["Title"] = "Home Page";
}

<script>
    function actionFailure(args)
    {
        var span = document.createElement('span');
        this.element.parentNode.insertBefore(span, this.element);
        span.style.color = '#FF0000';
        span.innerHTML = 'Server exception: ' + args['exception'];
    }
</script>

@{
    Write("sfsfsdf");
}
@*dataSource="ViewBag.DataSource"
detailTemplate="#detailtemplate"
insertUrl="/Home/Insert" updateUrl="/Home/Update" removeUrl="/Home/Delete"
url="/Home/UrlDatasource"  batchUrl="/Home/BatchUpdate" adaptor="UrlAdaptor"*@


@{
    var grid = Html.EJS()
        .Grid("RazorGrid")
        //.DataSource((ObservableCollection<Record>) ViewBag.DataSource)
        .DataSource(dm =>
        {
            dm.BatchUrl("/Home/BatchUpdate")
              .Adaptor("UrlAdaptor")
              .Url("/Home/UrlDatasource");
        })
        //.DetailTemplate("#detailtemplate")
        .Columns(col =>
        {
            col.Field("RecordId")
               .HeaderText("RID")
               .IsPrimaryKey(true)
               .Width("100")
               .Add();
            col.Template("${index}")
               .HeaderText("Index")
               .Width("100")
               .Add();
            col.Field("OrderId")
               .HeaderText("RID")
               //.IsPrimaryKey(true)
               .Width("120")
               .ValidationRules(new {required = "true"})
               .TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center)
               .Add();
            //col.Template("#templateCustomers")
            //   //.Field("Customers")
            //   .HeaderText("Customers")
            //   .Width("150")
            //   .ValidationRules(new {required = "true"})
            //   .TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center)
            //   .Add();
            col.Field("Freight")
               .HeaderText("Freight")
               .Width("120")
               .Format("C2")
               .TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right)
               .EditType("numericedit")
               .Add();
            col.Field("OrderDate")
               .HeaderText("Order Date")
               .Width("130")
               .ValidationRules(new {required = "true"})
               .TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center)
               .Format("yMd")
               .EditType("datepickeredit")
               .Add();
            col.Field("ShippedDate")
               .HeaderText("Shipped Date")
               .Width("130")
               .ValidationRules(new {required = "true"})
               .TextAlign(Syncfusion.EJ2.Grids.TextAlign.Center)
               .Format("yMd")
               .EditType("datepickeredit")
               .Add();
            col.Field("ShipCountry")
               .HeaderText("Ship Country")
               .Width("150")
               .ValidationRules(new {required = "true"})
               .EditType("dropdownedit")
               .Add();
        })
        .AllowPaging()
        .AllowFiltering()
        .AllowSorting()
        .AllowReordering()
        .AllowResizing()
        .AllowGrouping()
        .ShowColumnMenu()
        .PageSettings(page => page.PageCount(5))
        .EditSettings(edit =>
        {
            edit.AllowAdding(true)
                .AllowEditing(true)
                .AllowDeleting(true)
                .Mode(Syncfusion.EJ2.Grids.EditMode.Batch);
        })
        .Toolbar(new List<string> {"Add", "Edit", "Delete", "Update", "Cancel"})
        .ActionFailure("actionFailure");
}

@(grid.Render())




<script id='dropdown' type="text/template">
        <select class="e-control e-dropdownlist">
            <option value="1" selected="selected">Order Placed</option>
            <option value="2">Processing</option>
            <option value="3">Delivered</option>
        </select>
    </script>

<script>
    function dropdown(args) {
        var ele = args.cell.querySelector('select');
        var drop = new ej.dropdowns.DropDownList({ popupHeight: 150, popupWidth: 150 });
        drop.appendTo(ele);
    }
</script>













@*<e-datamanager json="((IEnumerable<object>)ViewBag.DataSource).ToArray()" batchUrl="/Home/BatchUpdate" adaptor="JsonAdaptor"></e-datamanager>*@
@*<ejs-grid dataSource="ViewBag.DataSource"
            id="HelperGrid"
          allowPaging="true"
          allowReordering="true"
          allowResizing="true"
          allowSorting="true"
          showColumnMenu="true"
          allowGrouping="true"
          toolbar="@(new List<string> {"Add", "Edit", "Delete", "Update", "Cancel"})"
          actionFailure="actionFailure">
    <e-grid-editSettings allowAdding="true"
                         allowDeleting="true"
                         allowEditing="true"
                         mode="Batch"></e-grid-editSettings>
    
    <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
    <e-grid-columns>
        <e-grid-column field="RecordId"
                       isPrimaryKey="true"
                    headerText=""
                    width="30"
                    maxWidth="60"></e-grid-column>
    <e-grid-column template="${index}"
                    headerText=""
                    width="30"
                    maxWidth="60"></e-grid-column>
    <e-grid-column field="OrderId"
                    headerText="Order ID"
                    textAlign="Center"
                    width="120"
                    validationRules="@(new {required = true})"></e-grid-column>
<e-grid-column template="#templateCustomers"
                headerText="Custumers"
                textAlign="Center"
                width="150"
                allowEditing="false"></e-grid-column>
    <e-grid-column field="OrderDate"
                    headerText="Order Date"
                    format="yMd"
                    width="130"
                    validationRules="@(new {required = true})"
                    editType="datepickeredit"></e-grid-column>
    <e-grid-column field="Freight"
                    headerText="Freight"
                    format="C2"
                    width="120"
                    validationRules="@(new {required = true})"
                    editType="numericedit"></e-grid-column>
    <e-grid-column field="ShippedDate"
                    headerText="Shipped Date"
                    format="yMd"
                    width="140"
                    validationRules="@(new {required = true})"
                    editType="datepickeredit"></e-grid-column>
    <e-grid-column field="ShipCountry"
                    headerText="Ship Country"
                    width="150"
                    validationRules="@(new {required = true})"
                    editType="dropdownedit"></e-grid-column>
        </e-grid-columns>
    </ejs-grid>*@

@*
    https://help.syncfusion.com/aspnet-core/grid/columns?cs-save-lang=1&cs-lang=razor
    https://ej2.syncfusion.com/16.1.24/aspnet/documentation/grid/columns.html?syntax=tag
    https://www.syncfusion.com/forums/136307/grid-documentation-is-incomplete
    https://help.syncfusion.com/js/grid/columns
    https://help.syncfusion.com/aspnet/grid/how-to/display-other-syncfusion-controls-in-grid-columns?cs-save-lang=1&cs-lang=js

    https://ej2.syncfusion.com/16.1.24/aspnet/documentation/grid/how-to.html?syntax=tag
    https://aspdotnetcore.syncfusion.com/Grid/ColumnTemplate#/material
    https://help.syncfusion.com/aspnet-core/gettingstarted/getting-started-2-0
    https://metanit.com/sharp/aspnet5/7.2.php
    https://docs.microsoft.com/en-us/aspnet/core/client-side/using-gulp
    https://codeburst.io/how-to-use-webpack-in-asp-net-core-projects-a-basic-react-template-sample-25a3681a5fc2
    https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc*@



<script type="text/x-template" id="templateCustomers">

    @*@Html.EJS().Grid("as23").Render()*@


    @{
        int x = 0;
    }

    @*{{if RecordId < 3}}
        <div>${RecordId}</div>*@

    @*@{
        for (int i = 0; i < 3; i++)
        {
            @:Hi @i
        }
    }*@

    @Html.Raw("<span>Hello, </span>")

    ${Customers}


    @{
        var list = (ObservableCollection<Record>)ViewBag.DataSource;
        int length = list[x].Customers.Count;
        var str = list[x].Customers
            .Aggregate(new StringBuilder(), (sb, c) => sb.Append(--length > 0 ? $"{c.Id}, " : $"{c.Id}"))
            .ToString();
        <div>@str</div>

        @*foreach (var customer in Model.Records[x].Customers)
            {
                <div>@customer.Id</div>
                <div>@customer.LastName</div>
                    <div>@customer.FirstName</div>
                    <div>@customer.DateOfBirth</div>
            }*@

        //<div>@this.__Syncfusion_EJ2_Grids_Grid.Width</div>

    }


    @*<ejs-grid id="gggg + @Model.Records[1].Id" dataSource="@Model.Records[1].Customers">
        </ejs-grid>*@
</script>


@*<script type="text/javascript">
        function template(args)
        {
            $(args.cell).find(".rating").ejRating({ allowReset: false });
        }
    </script>*@

<script>
    function actionComplete(args)
    {
        if (args.requestType === 'reorder')
        {
            var dropdown = document.getElementById("column").ej2_instances[0],
                grid = document.getElementById("Grid").ej2_instances[0];
            var field = (dropdown.value),
                index = grid.getColumnIndexByField(field);

            document.getElementById("columnIndex").ej2_instances[0].value = index;
        }
    }

    function columnChange(args)
    {
        var grid = document.getElementById("Grid").ej2_instances[0];
        var field = this.value;
        var index = grid.getColumnIndexByField(field);
        document.getElementById("columnIndex").ej2_instances[0].value = index;
    }

    function indexChange(args)
    {
        var grid = document.getElementById("Grid").ej2_instances[0],
            dropdown = document.getElementById("column").ej2_instances[0];
        var field = (dropdown.value);
        var toColumnIndex = this.value;
        grid.reorderColumns(field, (grid.columns[toColumnIndex]).field);
    }
</script>

<style type="text/css" class="cssStyles">

    .detailtable td
    {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .photo
    {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>

<script type="text/x-template" id="detailtemplate">
    <table class="detailtable" style="width:100%">
        <colgroup>
            <col style="width:35%" />
            <col style="width:35%" />
            <col style="width:30%" />
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="4" style="text-align: center;">
                    <span style="font-weight: 600; font-size:70px">${RecordId}-${OrderId}</span>
                </td>
                <td>
                    <span style="font-weight: 500;">Ship Country: </span> ${ShipCountry}
                </td>
                <td>
                    <span style="font-weight: 500;">Order Date: </span> ${OrderDate.toLocaleDateString()}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Freight: </span> ${Freight}
                </td>
                <td>
                    <span style="font-weight: 500;">Shipped Date: </span> ${ShippedDate.toLocaleDateString()}
                </td>
            </tr>
        </tbody>
    </table>

</script>
